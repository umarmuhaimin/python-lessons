### Python Lesson: Lists (and Related Concepts) ###

#########################################################################################################

# ğŸ”¹ Lists

# ğŸ‘‰ A list is a collection of values stored inside square brackets [ ].

# Example:
# fruits = ["apple", "banana", "cherry"]

# ğŸ‘‰ Items are ordered by index numbers, starting from 0.
#     â†’ fruits[0] â†’ "apple"
#     â†’ fruits[1] â†’ "banana"

# ğŸ‘‰ Lists can store mixed data types (numbers, strings, booleans, etc.).

#########################################################################################################

# ğŸ”¹ Accessing Elements 

# ğŸ‘‰ Use indexing with [] to get specific items.

# ğŸ‘‰ Example:
#     â†’ print(fruits[0])  # apple
#     â†’ print(fruits[2])  # cherry

#########################################################################################################

# ğŸ”¹ len() Function

# ğŸ‘‰ Built-in function that returns the number of items in a container.

# ğŸ‘‰ Works with:
#     Strings â†’ return number of characters.
#     Lists â†’ return number of elements.
#     Tuples â†’ return number of elements.
#     Dictionaries â†’ return number of key-value pairs.
#     Sets â†’ return number of unique elements.
#     Ranges â†’ return number of items in the range.

# ğŸ‘‰ Examples:
#     â†’ print(len("hello"))         # 5  [string]
#     â†’ print(len([1, 2, 3, 4]))    # 4  [integer]
#     â†’ print(len({"a": 1, "b": 2})) # 2 [dictionary]

#########################################################################################################

# ğŸ”¹ Dictionaries (dict)
 
# ğŸ‘‰ A collection of key-value pairs, written with { }.

# ğŸ‘‰ Syntax: {key: value}

# ğŸ‘‰ Example:
#     â†’ student = {"name": "Harry", "house": "Gryffindor", "patronus": "stag"}
#     â†’ print(student["name"])   # Harry

# ğŸ‘‰ Keys are unique, values can be repeated.

#########################################################################################################

# ğŸ”¹ None

# ğŸ‘‰ Special value that represents the absence of a value.

# ğŸ‘‰ Often used as a default placeholder.

# print("") â†’ ("") indicates nothing/none.

#########################################################################################################

# ğŸ”¹ In short:

# ğŸ‘‰ Lists [ ] â†’ ordered collection of items, accessed by index.
# ğŸ‘‰ len() â†’ counts items.
# ğŸ‘‰ dict { } â†’ key-value pairs.
# ğŸ‘‰ None â†’ no value.
