# Implement a program that asks the user for a positive integer n and then prints "meow" exactly n times.
# â†’ Use a function get_number() that keeps prompting the user until they provide a positive integer, then returns it. â†’ while_loop
# â†’ Use another function meow(n) that prints "meow" n times, one per line. â†’ for_loop
# â†’ Call both functions inside main().

def main():
    number = get_number()  # number variable stores get_number function.
    meow(number)           # meow function will output data from number variable data.

def get_number():
    while True:
        n = int(input("What's n? "))
        if n > 0:
            break
    return n               # The positive n integer that causes the loop to break because matched the condition of loop will return / stores inside number variable.
    
def meow(n):
    for _ in range(n): # Since _ is used, order does not matter. So if n is any positive integer, it will print n number of times.
        print("meow")

main()


# Meow Program Summary :
# Goal: Ask user for a positive integer n â†’ print "meow" exactly n times.

# ðŸ”¹ Functions:

#  main()
# â†’ Calls get_number() â†’ stores result in number.
# â†’ Calls meow(number) â†’ prints "meow" n times.

# get_number() (uses while True loop)
# â†’ Keeps asking user for n.
# â†’ If n > 0, loop breaks.
# â†’ Returns valid n to main().

# meow(n) (uses for loop)
# â†’ Loops n times.
# â†’ Prints "meow" once per iteration.
# â†’ _ is used as a throwaway loop variable (name doesnâ€™t matter).

# ðŸ”¹ Key Concepts:
# â†’ while True + break â†’ input validation loop.
# â†’ for _ in range(n) â†’ repeat action n times.
# â†’ Return values â†’ get_number() returns n, passed into meow(n).